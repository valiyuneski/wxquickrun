/**
 *	wxQuickRun
 *	Copyright © 2006-2007, Priyank Bolia.
 *
 *	Contact: http://priyank.co.in
 *
 *	This program is free software; you can redistribute it and/or
 *	modify it under the terms of the GNU General Public
 *	License as published by the Free Software Foundation; either
 *	version 2 of the License, or (at your option) any later version.
 *
 *	This program is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *	General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public
 *	License along with this program; if not, write to the Free Software
 *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 *	See gpl.txt for more information regarding the GNU General Public License.
 *
 * 
 *	\file TaskBarIcon.cpp
 *	\brief 
 *	\author Priyank Bolia
 *  \created 22 Jun, 2006
 **/

#include "TaskBarIcon.h"
#include "wxQuickRun.h"
#include "AboutDialog.h"
#include "SetupDialog.h"
#include "QuickRunFrame.h"

#ifdef __WXDEBUG__
#define new WXDEBUG_NEW
#endif

BEGIN_EVENT_TABLE(CTaskBarIcon, wxTaskBarIcon)
	EVT_MENU(wxID_TASKBAR_ABOUT, CTaskBarIcon::OnMenuAbout)
	EVT_MENU(wxID_TASKBAR_EXIT, CTaskBarIcon::OnMenuExit)
	EVT_MENU(wxID_TASKBAR_SHOW_HIDE, CTaskBarIcon::OnMenuShowHide)
	EVT_MENU(wxID_TASKBAR_SETUP, CTaskBarIcon::OnMenuSetup)
	EVT_UPDATE_UI(wxID_TASKBAR_SHOW_HIDE, CTaskBarIcon::OnUpdateMenuShowHide)
	EVT_TASKBAR_LEFT_DCLICK(CTaskBarIcon::OnLeftButtonDClick)
END_EVENT_TABLE()

CTaskBarIcon::CTaskBarIcon(wxWindow *pParent)
: wxTaskBarIcon()
, m_pParent(pParent)
{
}

CTaskBarIcon::~CTaskBarIcon(void)
{
}

void CTaskBarIcon::OnLeftButtonDClick(wxTaskBarIconEvent& WXUNUSED(event))
{
	((CQuickRunFrame *)m_pParent)->ShowTaskIcon(m_pParent->IsShown());
}

/**
 * \fn wxMenu* CTaskBarIcon::CreatePopupMenu()
 * \brief Creates the pop up menu for the task bar icon.
 * \return The pop up menu pointer.
 */
wxMenu* CTaskBarIcon::CreatePopupMenu()
{
	wxMenu *menu = new wxMenu;
	menu->Append(wxID_TASKBAR_SHOW_HIDE,  wxT("&Hide"));
	menu->Append(wxID_TASKBAR_SETUP,  wxT("&Setup"));
	menu->AppendSeparator();
	menu->Append(wxID_TASKBAR_ABOUT,  wxT("&About..."));
	menu->AppendSeparator();
	menu->Append(wxID_TASKBAR_EXIT,  wxT("E&xit"));
	return menu;
}

/**
 * \fn void CTaskBarIcon::OnMenuExit(wxCommandEvent& WXUNUSED(event))
 * \brief Closes the SAC application.
 * \param event The command event generated by the menu.
 */
void CTaskBarIcon::OnMenuExit(wxCommandEvent& WXUNUSED(event))
{
	wxCloseEvent event(wxEVT_CLOSE_WINDOW, wxQuickRunApp::wxID_FRAME_MAIN);
	event.SetCanVeto(false);
	wxPostEvent(m_pParent, event);
}

/**
 * \fn void CTaskBarIcon::OnMenuAbout(wxCommandEvent& WXUNUSED(event))
 * \brief Displays the About information dialog box.
 * \param event The command event generated by the menu.
 */
void CTaskBarIcon::OnMenuAbout(wxCommandEvent& WXUNUSED(event))
{
	CAboutDialog dlgAbout(m_pParent, CAboutDialog::wxID_DIALOG_ABOUT);
	dlgAbout.ShowModal();
}

void CTaskBarIcon::OnMenuShowHide(wxCommandEvent& WXUNUSED(event))
{
	((CQuickRunFrame *)m_pParent)->ShowTaskIcon(m_pParent->IsShown());
}

void CTaskBarIcon::OnUpdateMenuShowHide(wxUpdateUIEvent &event)
{
	if(m_pParent->IsShown())
	{
		event.SetText(wxT("&Hide"));
	}
	else
	{
		event.SetText(wxT("S&how"));
	}
}

void CTaskBarIcon::OnMenuSetup(wxCommandEvent& WXUNUSED(event))
{
	CSetupDialog setupDlg(m_pParent, CSetupDialog::wxID_DIALOG_SETUP);
	setupDlg.ShowModal();
}